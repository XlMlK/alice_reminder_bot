import os
import re
import json
from datetime import datetime, timedelta
import dateparser
import telebot
from flask import Flask, request, jsonify

# === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ===
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")  # —Ç–≤–æ–π chat_id
MESSAGE_THREAD_ID = os.getenv("MESSAGE_THREAD_ID")  # id –≤–µ—Ç–∫–∏
bot = telebot.TeleBot(TELEGRAM_TOKEN)
app = Flask(__name__)


# === –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–∞—Ä—Å–µ—Ä –≤—Ä–µ–º–µ–Ω–∏ ===
def extract_time_and_text(command: str, request_json=None):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç —Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏ –∏ –≤—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è (–≤–∫–ª—é—á–∞—è –æ–±—Ä–∞–±–æ—Ç–∫—É YANDEX.NLU)."""
    task_text = re.sub(r"^–Ω–∞–ø–æ–º–Ω–∏( –º–Ω–µ)?", "", command, flags=re.IGNORECASE).strip()
    parsed_time = None

    if request_json:
        entities = request_json.get("request", {}).get("nlu", {}).get("entities", [])
        number = None
        relative_days = 0
        relative_hours = 0
        relative_minutes = 0

        for e in entities:
            if e["type"] == "YANDEX.NUMBER":
                number = e["value"]
            elif e["type"] == "YANDEX.DATETIME":
                val = e["value"]
                if val.get("day_is_relative"):
                    relative_days = val.get("day", 0)
                if val.get("hour_is_relative"):
                    relative_hours = val.get("hour", 0)
                if val.get("minute_is_relative"):
                    relative_minutes = val.get("minute", 0)

        # "—á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É" –∏–ª–∏ –ø–æ–¥–æ–±–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
        if number and "—á–µ—Ä–µ–∑" in command:
            parsed_time = datetime.now() + timedelta(minutes=int(number))
        elif relative_days or relative_hours or relative_minutes:
            parsed_time = datetime.now() + timedelta(
                days=relative_days, hours=relative_hours, minutes=relative_minutes
            )

    # fallback: –µ—Å–ª–∏ NLU –Ω–µ –ø–æ–º–æ–≥–ª–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º dateparser
    if not parsed_time:
        parsed_time = dateparser.parse(
            task_text,
            languages=["ru"],
            settings={"PREFER_DATES_FROM": "future"}
        )

    return task_text, parsed_time


# === –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –Ø–Ω–¥–µ–∫—Å.–î–∏–∞–ª–æ–≥–æ–≤ ===
@app.route("/alice", methods=["POST"])
def alice_webhook():
    data = request.json
    command = data.get("request", {}).get("original_utterance", "").lower().strip()

    # –ü—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    if not command:
        return jsonify({
            "version": "1.0",
            "response": {
                "text": "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ. –ù–∞–ø—Ä–∏–º–µ—Ä: ¬´–Ω–∞–ø–æ–º–Ω–∏ –∫—É–ø–∏—Ç—å —Ö–ª–µ–± —á–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç¬ª.",
                "end_session": False
            }
        })

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
    task_text, remind_time = extract_time_and_text(command, data)

    if not remind_time:
        return jsonify({
            "version": "1.0",
            "response": {
                "text": "–ù–µ –ø–æ–Ω—è–ª–∞, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –Ω–∞–ø–æ–º–Ω–∏—Ç—å. –ü–æ–≤—Ç–æ—Ä–∏ –≤—Ä–µ–º—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.",
                "end_session": False
            }
        })

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—ã–≤–æ–¥
    remind_time_str = remind_time.strftime("%H:%M:%S %d.%m.%Y")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
    message = f"‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: {task_text}\nüïí –í—Ä–µ–º—è: {remind_time_str}"
    try:
        bot.send_message(CHAT_ID, message, message_thread_id=MESSAGE_THREAD_ID)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")

    # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    return jsonify({
        "version": "1.0",
        "response": {
            "text": f"–•–æ—Ä–æ—à–æ, –Ω–∞–ø–æ–º–Ω—é {task_text} –≤ {remind_time.strftime('%H:%M')}.",
            "end_session": False
        }
    })


# === –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ ===
@app.route("/", methods=["GET"])
def index():
    return "‚úÖ Reminder bot is running!"


# === –ó–∞–ø—É—Å–∫ ===
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.getenv("PORT", 8080)))

